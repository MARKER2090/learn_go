
======================
短信服务治理方面
设计并实现一个高科用的短信平台
1. 提高可用新：重试机制、客户端限流、failover（轮询，实时检测）
	1.1 实时检测：
	1.1.1 基于超时的实时检测
	1.1.2 基于响应时间的实时检测（比如说，平均响应时间上升20%）
	1.1.3 基于长尾请求的实时检测（比如说，


const xxx "https://defsfasdf/asfd%s"
return fmt.Sprintf(xxx)
学习以下fmt.Sprintf()的写法
